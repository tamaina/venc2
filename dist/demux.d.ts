import { MP4AudioTrack, MP4File, MP4Info, MP4VideoTrack } from '@webav/mp4box.js';
/**
 * Returns a transform stream that sends samples from a mp4 file stream (Blob.stream).
 * **Set preventClose: true** when using the stream with pipeThrough.
 *
 * (For memory saving, transform is delayed with Promise, but it is not effective unless the mp4 is progressive.)
 */
export declare const generateDemuxTransformer: (trackId: number, DEV?: boolean) => TransformStream<Uint8Array, Sample>;
export type VideoInfo = {
    info: MP4Info;
    videoInfo: MP4VideoTrack;
    audioInfo?: MP4AudioTrack;
    description: Uint8Array;
    file: MP4File;
};
export declare function getDescriptionBuffer(entry: any): Uint8Array;
/**
 * Returns video info from a mp4 file generated by mp4box.js.
 * @param file MP4 File
 * @returns VideoInfo
 */
export declare function getMP4Info(file: Blob, DEV?: boolean): Promise<VideoInfo>;
